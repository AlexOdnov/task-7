{"version":3,"sources":["scripts/test.js"],"names":["describe","makeTest","x","expected","it","assert","equal","pow","isNaN"],"mappings":";AAAAA,SAAS,MAAO,WACdA,SAAS,yBAA0B,WACxBC,SAAAA,EAASC,GACVC,IAAAA,EAAWD,EAAIA,EAAIA,EACzBE,GACE,kBAAoBF,EAAI,2BAA6BC,EACrD,WACEE,OAAOC,MAAMC,IAAIL,EAAG,GAAIC,KAKzB,IAAA,IAAID,EAAI,EAAGA,GAAK,EAAGA,IACtBD,EAASC,KAIbE,GAAG,uDAAwD,WACzDC,OAAOG,MAAMD,IAAI,GAAI,IAAK,uBAG5BH,GAAG,iDAAkD,WACnDC,OAAOG,MAAMD,IAAI,EAAG,MAAO,yBAG7BP,SAAS,+CAAgD,WAC9CC,SAAAA,EAASC,GAChBE,GAAG,kBAAoBF,EAAI,4BAA6B,WACtDG,OAAOC,MAAMC,IAAIL,EAAG,GAAI,KAIvB,IAAA,IAAIA,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAC5BD,EAASC","file":"test.78257771.js","sourceRoot":"../src","sourcesContent":["describe('pow', function () {\n  describe('возводит x в степень n', function () {\n    function makeTest(x) {\n      const expected = x * x * x;\n      it(\n        'при возведении ' + x + ' в степень 3 результат: ' + expected,\n        function () {\n          assert.equal(pow(x, 3), expected);\n        }\n      );\n    }\n\n    for (let x = 1; x <= 5; x++) {\n      makeTest(x);\n    }\n  });\n\n  it('при возведении в отрицательную степень результат NaN', function () {\n    assert(isNaN(pow(2, -1)), 'pow(2, -1) не NaN');\n  });\n\n  it('при возведении в дробную степень результат NaN', function () {\n    assert(isNaN(pow(2, 1.5)), 'pow(2, -1.5) не NaN');\n  });\n\n  describe('любое число, кроме нуля, в степени 0 равно 1', function () {\n    function makeTest(x) {\n      it('при возведении ' + x + ' в степень 0 результат: 1', function () {\n        assert.equal(pow(x, 0), 1);\n      });\n    }\n\n    for (let x = -5; x <= 5; x += 2) {\n      makeTest(x);\n    }\n  });\n});\n"]}